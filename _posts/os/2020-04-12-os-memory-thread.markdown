---
layout: post
title:  "프로세스의 메모리, 스레드"
date:   2020-04-12 10:00:00 +0900
categories: os
---

프로세스의 메모리 구조와 스레드의 간단한 설명

## 프로세스의 메모리 구조

메모리의 `낮은 주소(0x00000000)` 부터 `높은 주소(0xFFFFFFFF)` 까지의 간략한 구조

|-|설명|
|---|-----|
|CODE|프로그램의 instruction
|STATIC|전역 변수
|HEAP|동적 메모리 할당
|STACK|스레드 별 지역 변수 데이터, 함수 실행 인자 및 ret 포인터|

`HEAP` : 낮은 주소에서 시작해 높은 주소로 메모리를 점유  
`STACK` : 높은 주소에서 시작해 낮은 주소로 메모리를 점유 (`push` instruction의 특징)

----

## 스레드

프로세서(CPU)의 실행 단위. 프로세스에서 작업을 위해 생성할 수 있다. 하나의 프로세스는 적어도 하나의 스레드를 가지고 있다.

#### 스레드 컨텍스트
각 스레드는 실행 환경 정보를 가지고 있는 스레드 컨텍스트를 가지고 있다.
- 범용 레지스터 값(general-purpose registers) ex) ax, bx, pc, ....
- 스택 포인터, 카운터 - sp, pc : 범용 레지스터에 포함됨
- CPU 아키텍쳐, 컴파일러 규칙에 의해 정의될 수 있음.

💡 `BP` : stack base pointer - 스레드 스택의 가장 높은 주소(스택이 시작 주소)  
💡 `SP` : stack pointer - 스레드 스택의 가장 낮은 주소(마지막 `push`, `pop`으로 접근한 주소)   
💡 `PC` : program counter - CPU가 실행해야할 다음 명령의 주소
