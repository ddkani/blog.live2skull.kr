---
layout: post
title:  "백준 알고리즘 풀이 - 1463번(1로 만들기)"
date:   2099-04-04 00:00:00 +0900
categories: python pip algorithm
---

[문제](https://www.acmicpc.net/problem/1463) |
**[✏️정답 확인](https://github.com/live2skull/TheLordOfBOJ/blob/master/problems/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/1463.py)**

N값이 N-X에 의해 결정되므로(칠하는 전체 비용) 다이나믹 프로그래밍으로 구현한다.

하지만, 재귀로 코드를 구현하였더니 `RecursionError`가 발생하였는데, 문제의 제약 조건에서 지나치게 재귀가 많이 발생하는 조건이 있다.

📝 처음 작성한 코드


처음 작성한 코드에는 두 가지 문제점이 존재했으며, 결과적으로는 재귀함수 실행 제한 초과로 통과하지 못했다.  
문제점은 다음과 같다.



📝 최종 작성한 코드
```
dp = [0] * 1000001 # type: list
dp[1] = 0
dp[2] = dp[1] + 1 # 2 가능
dp[3] = dp[1] + 1 # 3 가능

def main():
    tg = int_input()

    tmp = [] # 비교값이 1-3개일수도 있음. if문이 더 효율적인가?
    # 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
    for i in range(4, tg + 1):
        if i % 3 == 0: tmp.append(dp[i // 3])
        if i % 2 == 0: tmp.append(dp[i // 2])
        tmp.append(dp[i - 1])
        dp[i] = min(tmp) + 1
        tmp.clear()

    print(dp[tg])
```
