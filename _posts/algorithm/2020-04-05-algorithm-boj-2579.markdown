---
layout: post
title:  "백준 알고리즘 풀이 - 2579번(계단 오르기)"
date:   2020-04-05 12:00:00 +0900
categories: python algorithm dynamicprogramming
---

[문제](https://www.acmicpc.net/problem/2579) |
**[✏️정답 확인](https://github.com/live2skull/TheLordOfBOJ/blob/master/problems/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/2579.py)**

> 각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

다이나믹 프로그래밍의 메모이제이션 기법을 활용해 1번째 계단에서의 최댓값, 2번째, ... N번째까지 계산하고자 하였다.  
이 때 계단을 오를 수 있는 제약조건이 있는데, 다음과 같다.

> \#1. 계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.  
\#2. 연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.  
\#3. 마지막 도착 계단은 반드시 밟아야 한다.

이 문제를 풀면서 가장 난해했던 부분이다. 상향식으로 문제를 풀어나간다면 제약조건이 있으므로 N번째에서 N+1또는 N+2를 선택할지, 만약 선택한다면 그다음 순서에서 제약조건으로 인해 이전 결과값이 몇번째 블럭에서 도달했는지(1개 점프인지 2개 점프인지)를 저장해야 한다고 생각했기 때문이다.

결국 더이상 진행이 불가능해 타인의 답안을 참고하였으며 다음의 결론을 얻었다.

💡 상향식 풀이의 N번째 판단에서는 N-X에 대해서만 제약조건을 판단한다. 반대로 하향식 풀이의 N번째 판단에서는 N+X에 대해서만 제약조건을 판단한다. (진행 방향의 반대방향에 대해서만 제약조건을 판단함)  
**진행 방향에서의 제약조건 판단이 원할하지 않으면 반대 방향에서의 풀이를 유도해 본다.**

💡 제약조건에 대응하기 위해 여러가지 상태(예: 어느 계단에서 도달했는가)를 저장하고 제어문으로 처리하기보다는 연산을 진행하면서 제약조건에 부합되는 경우의 수만 판단한다. 즉 상위 순서에서는 하위 순서의 무결성을 확인할 필요가 없다.
