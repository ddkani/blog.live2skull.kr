---
layout: post
title:  "백준 알고리즘 풀이 - 9095번(1, 2, 3 더하기)"
date:   2099-04-07 12:00:00 +0900
categories: python pip algorithm
---

[문제](https://www.acmicpc.net/problem/9095) |
**[✏️정답 확인](https://github.com/live2skull/TheLordOfBOJ/blob/master/problems/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/9095.py)**

N값이 N-X에 의해 결정되므로 다이나믹 프로그래밍으로 구현한다.

|N|갯수|-|
|---|---|-------|
|1|1|1|
|2|2|1+1, 2|
|3|4|1+1+1, 2+1, 1+2, 3|
|4|7|1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2, 3+1, 1+3|

N에 따라 가능한 경우의 수를 계산하면 점화식 `dp[N] = dp[N-1] + dp[N-2] + dp[N-3]`이 성립함을 알 수 있으며, 이를 통해 문제를 풀이한다.

💡 다이나믹 프로그래밍 유형의 문제를 풀어보니 점화식을 세워 계산할 수 있는 유형이 많이 등장한다. 전체 경우의 수를 시뮬레이션 하기 전, N을 적어도 6번 이상까지 수기로 풀어보고 점화식을 유도해 본다.  
이때 점화식이 `3개 이상의 항을 참조` 할 수 있음에 유의한다.
